name: CI

on: push

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        BUILDMODE: [CIBUILDWHEEL, ASTROPY]
        
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2

      - name: Set up QEMU
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.BUILDMODE == 'CIBUILDWHEEL' }}
        id: qemu
        uses: docker/setup-qemu-action@v1

      - name: Setup Conda Environment
        if: ${{ matrix.BUILDMODE == 'ASTROPY' }}
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          use-mamba: true
          python-version: ${{ matrix.python-version }}
          environment-file: environment.yaml
          activate-environment: test-environment
          
      - name: Run tests
        if: ${{ matrix.BUILDMODE == 'ASTROPY' }}
        shell: bash -l {0}
        run: |
          pip install -e .
          python selftest.py

      - name: Build wheel
        if: ${{ matrix.BUILDMODE == 'CIBUILDWHEEL' }}
        env:
          CIBW_TEST_COMMAND: python {project}/selftest.py
          CIBW_BEFORE_BUILD_LINUX: yum install -y freetype-devel
          CIBW_SKIP: pp* *-musllinux*
          CIBW_TEST_REQUIRES: numpy pillow pytest
          CIBW_ARCHS_LINUX: auto aarch64
        run: |
          python -m pip install cibuildwheel
          #ci/travis-build.sh
          cibuildwheel --output-dir wheelhouse
      - run: ls -l wheelhouse/*
  publish:
    #if: startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    needs: 
       - build
    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/setup-python@v2
      
      - name: sdist 
        run: python setup.py sdist

      - run: ls -l dist/*

      - run: find . -name "*.whl"

      - run: ls -l wheelhouse/*

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: ${{ secrets.PYPI_USERNAME }}
          password: ${{ secrets.PYPI_PASSWORD }}
