name: CI

on: push

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        BUILDMODE: [CIBUILDWHEEL, ASTROPY]
        
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2

      - name: Set up QEMU
        if: ${{ matrix.os == 'ubuntu-latest' }}
        id: qemu
        uses: docker/setup-qemu-action@v1

      - name: Setup Conda Environment
        if: ${{ matrix.BUILDMODE == 'ASTROPY' }}
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          use-mamba: true
          python-version: ${{ matrix.python-version }}
          environment-file: environment.yaml
          activate-environment: test-environment

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Set global variables
        run: |
          echo "NUMPY_VERSION=stable" >> $GITHUB_ENV;
          echo "BUILDMODE=CIBUILDWHEEL" >> $GITHUB_ENV;
          echo "MAIN_CMD='python setup.py'" >> $GITHUB_ENV;
          echo "EVENT_TYPE=push pull_request" >> $GITHUB_ENV;
          echo "SETUP_CMD=test" >> $GITHUB_ENV;
          echo "TWINE_USERNAME=dhoese" >> $GITHUB_ENV;
          echo "CIBW_TEST_COMMAND=python {project}/selftest.py" >> $GITHUB_ENV;
          echo "CIBW_BEFORE_BUILD_LINUX=yum install -y freetype-devel" >> $GITHUB_ENV;
          #echo "CIBW_BEFORE_TEST=yum update && yum install -y libjpeg-devel" >> $GITHUB_ENV;
          echo "CIBW_SKIP=pp* *-musllinux*" >> $GITHUB_ENV;
          echo "CIBW_TEST_REQUIRES=numpy pillow pytest" >> $GITHUB_ENV;
          echo "CIBW_ARCHS_LINUX=auto aarch64" >> $GITHUB_ENV;

      - name: Run tests
        if: ${{ matrix.BUILDMODE == 'ASTROPY' }}
        shell: bash -l {0}
        run: |
          pip install -e .
          python selftest.py

      - name: Run a build script
        if: ${{ matrix.BUILDMODE == 'CIBUILDWHEEL' }}
        run: ci/travis-build.sh
